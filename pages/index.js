import { formContext } from "../utility/Context";
import { useContext, useEffect, useState } from "react";
import { AnimatePresence, motion as m } from "framer-motion";
import { IoRemove, IoAdd } from "react-icons/io5";
import Head from "next/head";
import Link from "next/link";
import CareerTree from "../components/CareerTree/Tree";
import GenericButton from "../components/GenericButton";
import MapLoaction from "../components/MapLocation";

const welcomeMessages = [
	"Welcome back",
	"What's up",
	"Good to see you",
	"Hope you're doing well",
	"Thanks for visiting",
	"Greetings",
	"Good, you're back",
];

const capitalizeString = text => {
	if (typeof text === "string" && text.length >= 1) {
		return `${text.charAt(0).toUpperCase()}${text.substring(1)}`;
	} else return null;
};

const randomNum = (min, max) => {
	return Math.floor(Math.random() * (max - min) + min);
};

const extendVariant = {
	hidden: { height: 0, opacity: 0 },
	shown: { height: "fit-content", opacity: 1, transition: { type: "tween" } },
};

export default function Home() {
	const { formData } = useContext(formContext);
	const [formSubmitted, setFormSubmitted] = useState(false);
	const [username, setUsername] = useState("");
	const [extendText, setExtendText] = useState(false);
	const [mapView, setMapView] = useState(false);

	useEffect(() => {
		if (Object.keys(formData).length) {
			const { firstName } = formData;
			setFormSubmitted(true);
			setUsername(firstName);
		}
	}, [formData]);

	return (
		<>
			<Head>
				<title>Oliver R. - Home</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div>
				<m.h1
					initial={{ x: -20, opacity: 0 }}
					animate={{ x: 0, opacity: 1 }}
					transition={{ type: "tween", ease: "easeInOut", duration: 1 }}
					className="text-7xl font-extralight"
				>
					{formSubmitted
						? welcomeMessages[randomNum(0, welcomeMessages.length)] + " "
						: "Hey, "}
					<span className="font-semibold text-8xl">
						{formSubmitted ? capitalizeString(username) : "I'm Oliver"}.
					</span>
				</m.h1>
				<h2 className="text-3xl text-blue-normal">Frontend Developer</h2>
				{mapView && <MapLoaction />}
				<div className="dark:text-silver text-lg flex flex-col px-24">
					<p className="pt-4">
						<br />
						I'm a Junior Frontend Developer, based in{" "}
						<span className="font-semibold dark:text-white text-black">
							Copenhagen.
						</span>
						<br />
						Currently studying web development at{" "}
						<button
							type="button"
							className="font-semibold dark:text-white text-black"
							onClick={() => setMapView(!mapView)}
						>
							Roskilde Technical School.
						</button>
						<AnimatePresence>
							{extendText && (
								<m.span
									variants={extendVariant}
									animate="shown"
									initial="hidden"
									exit="hidden"
									className="overflow-hidden block"
								>
									Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut
									risus erat, porttitor vitae leo sit amet, iaculis aliquet
									elit. Etiam sollicitudin egestas imperdiet. In sed blandit
									neque, ut dignissim massa.
								</m.span>
							)}
						</AnimatePresence>
					</p>
					<div className="text-white text-base flex justify-center">
						<GenericButton
							className="my-2"
							click={() => {
								setExtendText(!extendText);
							}}
						>
							{extendText ? <IoRemove /> : <IoAdd />}
							{extendText ? "View Less" : "View More"}
						</GenericButton>
					</div>
				</div>
				<CareerTree />
			</div>
		</>
	);
}
